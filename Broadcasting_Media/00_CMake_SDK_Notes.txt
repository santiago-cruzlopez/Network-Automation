cmake_minimum_required(VERSION 3.0.0)
project(SDK_DeckLink_Integration)

set(OSBitness 32)
if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(OSBitness 64)
endif()

set(FullOutputDir "${CMAKE_SOURCE_DIR}/bin/${CMAKE_SYSTEM_NAME}${OSBitness}/${CMAKE_BUILD_TYPE}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${FullOutputDir}/static_libs")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${FullOutputDir}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${FullOutputDir}")

# Find required packages
find_package(SDL2 REQUIRED)

# Define DeckLink SDK path
set(DECKLINK_SDK_PATH "/home/sebastian/Blackmagic_DeckLink_SDK_12.8/Linux")

# DeckLink SDK source files
set(DECKLINK_SOURCES
    "${DECKLINK_SDK_PATH}/include/DeckLinkAPIDispatch.cpp"
)

set(APP_SOURCES
    "${CMAKE_SOURCE_DIR}/src_sdk/DeckLinkManager.cpp"
    "${CMAKE_SOURCE_DIR}/src_sdk/CaptureDelegate.cpp"
    "${CMAKE_SOURCE_DIR}/src_sdk/PlaybackDelegate.cpp"
)

# Create executable
add_executable(${PROJECT_NAME} 
    SDK_Input_Output_01.cpp
    # SDK_Input_Output_02.cpp - it doesn't work
    # SDK_Input_Output_03.cpp 
    ${DECKLINK_SOURCES}
    #${APP_SOURCES}
)

# Configure include directories
target_include_directories(${PROJECT_NAME} PRIVATE 
    ${SDL2_INCLUDE_DIRS}
    "${DECKLINK_SDK_PATH}/include"
    "${CMAKE_SOURCE_DIR}/src_sdk"
)

# Link libraries
target_link_libraries(${PROJECT_NAME} ${SDL2_LIBRARIES})

# Platform-specific configurations for DeckLink
if(UNIX AND NOT APPLE)
    target_link_libraries(${PROJECT_NAME} dl pthread)
endif()


------------------ GStreamer CMake Configuration ------------------

cmake_minimum_required(VERSION 3.0.0)
project(SDK_DeckLink_Integration)

set(OSBitness 32)
if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(OSBitness 64)
endif()

set(FullOutputDir "${CMAKE_SOURCE_DIR}/bin/${CMAKE_SYSTEM_NAME}${OSBitness}/${CMAKE_BUILD_TYPE}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${FullOutputDir}/static_libs")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${FullOutputDir}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${FullOutputDir}")

# Find required packages - GStreamer
find_package(PkgConfig REQUIRED)
pkg_check_modules(GST REQUIRED gstreamer-1.0 gstreamer-video-1.0)

# Create executable
add_executable(${PROJECT_NAME} 
    SDK_mp4_to_SDI.cpp
)

# Configure include directories
target_include_directories(${PROJECT_NAME} PRIVATE 
    ${GST_INCLUDE_DIRS}
)

target_link_libraries(${PROJECT_NAME} PRIVATE ${GST_LIBRARIES})

target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -g ${GST_CFLAGS})